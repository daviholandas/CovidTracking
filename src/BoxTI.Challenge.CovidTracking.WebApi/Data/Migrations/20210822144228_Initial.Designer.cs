// <auto-generated />
using System;
using BoxTI.Challenge.CovidTracking.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoxTI.Challenge.CovidTracking.WebApi.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210822144228_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("varchar(125)");

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(125)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4beb7a7a-31c5-4e0c-ace1-507c4296c6ab"),
                            Abbreviation = "BR",
                            ActiveStatus = 0,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("aace90ec-b6d7-454f-b2aa-d595e8d46e9e"),
                            Abbreviation = "JP",
                            ActiveStatus = 0,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("b54cb09f-1b50-45c8-be78-0e21115b2b26"),
                            Abbreviation = "NL",
                            ActiveStatus = 0,
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("fa22824b-5270-4d6d-b460-5321fc771548"),
                            Abbreviation = "NG",
                            ActiveStatus = 0,
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("70117276-b71d-419a-88c5-fcf3d403d11d"),
                            Abbreviation = "AU",
                            ActiveStatus = 0,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("cb3131af-6829-47ec-85cb-5a438af7c01f"),
                            Abbreviation = "W",
                            ActiveStatus = 0,
                            Name = "World"
                        });
                });

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveCases")
                        .HasColumnType("varchar(125)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NewCases")
                        .HasColumnType("varchar(125)");

                    b.Property<string>("NewDeaths")
                        .HasColumnType("varchar(125)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalCases")
                        .HasColumnType("float");

                    b.Property<double>("TotalDeaths")
                        .HasColumnType("float");

                    b.Property<double>("TotalRecovered")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Report", b =>
                {
                    b.HasOne("BoxTI.Challenge.CovidTracking.WebApi.Models.Location", "Location")
                        .WithMany("Reports")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Location", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using BoxTI.Challenge.CovidTracking.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoxTI.Challenge.CovidTracking.WebApi.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210822200058_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("varchar(125)");

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(125)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a692679d-78c3-4787-ab5e-811921e2688d"),
                            Abbreviation = "BR",
                            ActiveStatus = 1,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("cb250c26-6683-4e58-b86b-96f947d73d9d"),
                            Abbreviation = "JP",
                            ActiveStatus = 1,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("78418662-981c-4127-a203-bb11d7e8cef6"),
                            Abbreviation = "NL",
                            ActiveStatus = 1,
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = new Guid("9fbc47c5-f5a8-4363-8452-0325be5256f7"),
                            Abbreviation = "NG",
                            ActiveStatus = 1,
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("46832224-7952-4a10-84d9-ac855df6d8bb"),
                            Abbreviation = "AU",
                            ActiveStatus = 1,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = new Guid("49bce409-009b-4c1b-93d1-4fcca7023521"),
                            Abbreviation = "W",
                            ActiveStatus = 1,
                            Name = "World"
                        });
                });

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("ActiveCases")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("NewCases")
                        .HasColumnType("float");

                    b.Property<double>("NewDeaths")
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalCases")
                        .HasColumnType("float");

                    b.Property<double>("TotalDeaths")
                        .HasColumnType("float");

                    b.Property<double>("TotalRecovered")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Report", b =>
                {
                    b.HasOne("BoxTI.Challenge.CovidTracking.WebApi.Models.Location", "Location")
                        .WithMany("Reports")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("BoxTI.Challenge.CovidTracking.WebApi.Models.Location", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
